spring.application.name=eureka-client-article
server.port=8082
eureka.client.service-url.defaultZone=http://wpp:wpp@localhost:8761/eureka/
#采用IP注册
eureka.instance.prefer-ip-address=true
#实例的ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#
management.endpoint.refresh.enabled=true
management.endpoints.web.exposure.include=*
#使用健康端点作为server检查依据
eureka.client.healthcheck.enabled=true
#
house.service.name=EUREKA-CLIENT-HOUSE
#Ribbon饥饿加载配置
ribbon.eager-load.enabled=true
ribbon.eager-load.clients=$house.service.name}
#=================ribbon配置========================
#禁用eureka,禁用后，必须使用ip地址调用
#ribbon.eureka.enabled=false
#配置接口地址列表，禁用之后可以手动配置地址
#EUREKA-CLIENT-HOUSE.ribbon.listOfServers=localhost:8081,localhost:8083
#配置自定义测负载均衡策略
#EUREKA-CLIENT-HOUSE.ribbon.NFLoadBalancerRuleClassName=com.wpp.cloud.client.rule.MyRule
#<服务名称>.ribbon.NFLoadBalancerRuleClassName=IRule实例
#<服务名称>.ribbon.NFLoadBalancerClassName=ILoadBalancer实例
#<服务名称>.ribbon.NFLoadBalancerPingClassName=IPing实例
#<服务名称>.ribbon.NIWSServerListClassName=ServerList实例
#<服务名称>.ribbon.NIWSServerListFilterClassName=ServerListFilter实例
#超时配置
#请求链接超时时间
ribbon.ConnectTimeout=2000
#请求处理的超时时间
ribbon.ReadTimeout=5000
#并发参数
#最大链接数
ribbon.MaxTotalConnections=500
#每个Host最大连接数
ribbon.MaxConnectionPerHost=500
#重试机制
#内置的重试机制
EUREKA-CLIENT-HOUSE.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RetryRule
#Spring的重试配置
#当前实例的重试次数
ribbon.maxAutoRetries=1
#切换实例的次数
ribbon.maxAutoRetriesNextServer=3
#对所有操作进行重试
ribbon.okToRetryOnAllOperations=true
#对http响应码进行重试
ribbon.retryableStatusCodes=500,404,502
#=================end of ribbon配置========================
#+++++++++++++++++++++++++++++++++++++++++++++++++++
#============== Feign 配置===============
#日志
logging.level.root=INFO
logging.level.com.wpp.cloud.client.feign.HouseRemoteClient=DEBUG
#============== End Feign 配置===============